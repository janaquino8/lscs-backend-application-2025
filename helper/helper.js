/**
 * @function isValidId
 * @description checks if an id is valid
 * @param id id from the request parameter 
 * @returns true if valid id, false otherwise
 */
function isValidId(id) {
    // Condition was generated by ChatGPT; validates that the id is a positive integer 
    return /^\d+$/.test(id);
}

/**
 * @function getValues
 * @description extracts the keys and values from the request body
 * @param data data from the request body 
 * @param forUpdate indicates if for PUT (true) or POST (false) method
 * @returns keys and values for the product, as well as placeholders for the query 
 */
function getValues(data, { forUpdate = false } = {}) {
    // Generated by ChatGPT; manipulats the request body for queries
    const keys = Object.keys(data).filter(k => data[k] !== undefined);
    const values = keys.map(k => data[k]);
    const placeholders = forUpdate
        ? keys.map(k => `${k} = ?`).join(', ')
        : keys.map(() => `?`).join(', ');

    return { keys, values, placeholders };
}

const Helper = { isValidId, getValues };
export default Helper;